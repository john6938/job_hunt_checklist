name: Evaluate GitHub Candidate Checklist

on:
  workflow_dispatch:

jobs:
  evaluate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Show workspace contents
        run: ls -la

      - name: Run Evaluation Script
        run: |
          CHECKLIST_FILE="checklist.md"
          echo "Checking if $CHECKLIST_FILE exists..."
          if [ ! -f "$CHECKLIST_FILE" ]; then
            echo "Checklist file not found: $CHECKLIST_FILE"
            exit 1
          fi

          echo "Reading checklist scores from $CHECKLIST_FILE..."

          total_score=0
          max_score=0

          while IFS= read -r line; do
            if [[ "$line" =~ \[x\]\ \(([1-3])\) ]]; then
              score=${BASH_REMATCH[1]}
              total_score=$((total_score + score))
            elif [[ "$line" =~ \[ \]\ \(([1-3])\) ]]; then
              score=${BASH_REMATCH[1]}
              max_score=$((max_score + score))
            fi
          done < "$CHECKLIST_FILE"

          grep -Eo "\[ \]\ \([1-3]\)" "$CHECKLIST_FILE" | grep -o "[1-3]" | while read -r s; do
            max_score=$((max_score + s))
          done

         if [ "$max_score" -eq 0 ]; then
            percentage=0
            echo "WARNING: Max score is 0 â€” setting percentage to 0."
          else
              percentage=$((total_score * 100 / max_score))
          fi


      - name: Save Summary
        run: |
          echo "### GitHub Candidate Evaluation Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Total Score: ${{ steps.evaluate.outputs.total }}" >> $GITHUB_STEP_SUMMARY
          echo "- Maximum Score: ${{ steps.evaluate.outputs.max }}" >> $GITHUB_STEP_SUMMARY
          echo "- Score Percentage: ${{ steps.evaluate.outputs.percentage }}%" >> $GITHUB_STEP_SUMMARY

    "DEBUG: total_score = $total_score"
    echo "DEBUG: max_score = $max_score"
